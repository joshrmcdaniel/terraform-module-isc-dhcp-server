# ISC DHCP Server Configuration
#
# --- Generated by Terraform ---
#
# ==============================================================================
#
# Global Settings
# ------------------------------------------------------------------------------
#
%{ if global_settings.authoritative ~}
authoritative;
%{ endif ~}
%{ if setup_ddns ~}
ddns-updates on;
ddns-domainname "${global_settings.ddns_domain_name}";
ddns-rev-domainname "${global_settings.ddns_rev_domainname}";
ddns-update-style ${global_settings.ddns_update_style};
include "/etc/bind/ddns-keys.conf";
ignore client-updates;
%{ endif ~}
#
default-lease-time ${global_settings.default_lease_time};
max-lease-time ${global_settings.max_lease_time};
#
# Subnet Pools
# ------------------------------------------------------------------------------
%{ for name, subnet in subnets ~}
#
# --- Pool for ${name} ---
#
subnet ${subnet.network_address} netmask ${subnet.netmask} {
  range ${subnet.range_start} ${subnet.range_end};
  option routers ${join(", ", subnet.gateways)};
  option subnet-mask ${subnet.netmask};
  option broadcast-address ${subnet.broadcast};
  option domain-name-servers ${join(", ",
               subnet.dns_servers != null 
               && length(subnet.dns_servers) > 0 ? subnet.dns_servers :
               subnet.use_gateways_as_dns != false ?
               subnet.gateways : global_settings.dns_servers)};
  option domain-name "${subnet.domain_name}";
  %{~ if subnet.domain_search != null && length(subnet.domain_search) > 0 ~}
  option domain-search ${join(", ", [for s in subnet.domain_search : "\"${s}\""])};
  %{~ endif ~}
}
%{~ if setup_ddns ~}
#
zone ${subnet.domain_name}. {
    primary 127.0.0.1;
    key dhcpupdate;
}
#
%{~ for zone in subnet.reverse_zones }
zone ${zone}.in-addr.arpa. {
  primary 127.0.0.1;
  key dhcpupdate;
}
#
%{~ endfor }
%{~ endif }
%{ endfor ~}
%{ if has_static_leases ~}
# Static leases
# ------------------------------------------------------------------------------
%{ for name, lease in static_leases ~}
#
host ${name} {
  hardware ethernet ${lease.mac};
  fixed-address ${lease.ip};
}
%{~ endfor ~}
%{~ endif ~}